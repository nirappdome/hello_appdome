# This is a basic workflow for integrating appdome-api-python with your github project
# File location should be under .github/workflows/
name: Appdome Android Fuse Build And Sign

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Inputs the workflow accepts.
    inputs:
      Android_vanilla_file:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'APK file'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      Fusion_set_id:
        description: "Android fusion set id"
        default: ''
        required: true
      Keystore_file:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Keystore file'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      keystore_password:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'keystore password'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      keystore_alias:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'keystore alias'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      key_pass:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'keystore key password'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # A demo job that builds an application to use with appdome
  build_app:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: main
          
     # Cloning appdome-api-python github repository
      - name: Cloning appdome-api-python github repository
        uses: actions/checkout@master
        with:
          repository: Appdome/appdome-api-python
          ref: refs/heads/main
          path: appdome

      # Runs dependencies intallation
      - name: Run dependencies installation
        run: |
            sudo apt update 
            sudo apt install python3-pip
            sudo pip3 install -r appdome/requirements.txt
      
      - name: download files
        run: |
          mkdir files
          wget ${{github.event.inputs.keystore_file}} -O files/file.keystore
          wget ${{github.event.inputs.android_vanilla_file}} -O files/vanilla.apk 
          ls files

      - name: make aoutput directories
        run: |
          mkdir output
          mkdir certificate
      
      # Run appdome api for Android apps
      - name: Appdome workflow for Android apps
        env: # creating needed environment variables using GitHub secrets
          APPDOME_API_KEY_TEMP: ${{secrets.APPDOME_API_KEY}}
        run: |
          sudo python3 appdome/appdome-api-python/appdome_api.py -key ${{secrets.APPDOME_API_KEY}} --app ./files/vanilla.apk --sign_on_appdome -fs ${{github.event.inputs.fusion_set_id}} --keystore ./files/file.keystore --keystore_pass ${{github.event.inputs.keystore_password}} --keystore_alias ${{github.event.inputs.keystore_alias}} --key_pass ${{github.event.inputs.key_pass}} --output ./output/appdome_vanilla.apk --certificate_output ./certificate/certificate.pdf
          ls output
          ls certificate
      
      # Upload fuse output as an artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: workflow-artifacts
          path: ./output/Appdome_vanilla.apk # path to output folder
